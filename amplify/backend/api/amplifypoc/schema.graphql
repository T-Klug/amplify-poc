enum OpenAIRoleType {
  SYSTEM
  ASSISTANT
  USER
}

type MessagesType {
  role: OpenAIRoleType
  content: String
}

type OpenAIChat @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  messages: [MessagesType]
  user: ID
  owner: String @auth(rules: [{ allow: owner, operations: [read, delete] }])
}

enum PromptType {
  SYSTEM
}

input MessagesTypeFuncInput {
  role: OpenAIRoleType
  content: String
}

input CreateOpenAIChatFuncInput {
  id: ID
  messages: [MessagesTypeFuncInput]
  user: ID
  owner: String
  _version: Int
}

type Mutation {
  createOpenAIChatFunc(input: CreateOpenAIChatFuncInput): OpenAIChat
    @function(name: "createOpenAiChat-${env}")
    @auth(rules: [{ allow: owner }])
}

type SystemPrompt
  @model
  @auth(
    rules: [
      {
        allow: groups
        groups: ["Admin"]
        operations: [read, create, update, delete]
      }
    ]
  ) {
  id: ID!
  prompt: String!
  type: PromptType
}
